#!/usr/bin/python

f = open('outHistoryComplete', 'r')
historyComplete = f.read() #Leer todo el historial
historyCompleteReadlines = f.readlines() #Leer todo el historial pero por lineas
f.close()

f = open('outHistoryComplete', 'r')
historyCompleteReadlines = f.readlines() #Leer todo el historial pero por lineas
f.close()

splitDos = historyCompleteReadlines[4].split(' ')

#Function para de una lista eliminar todos los valores que queremos que tenga, 
#por ejemplo si tenemos la lista ['1', '', '2', '3', '', ''] y queremos que se 
#eliminen todos los valores '' y que quede ['1', '2', '3'] entonces
#listParser: es la lista
#varReject: esel valor a desechar
def retireOfList(listParser, varReject):
	result = []
	for i in listParser:
		if i != varReject:
			result.append(i)
	return result

listVersiones = [] #Lista de Diccionarios, cada Diccionario sera los datos de una version
for i in historyCompleteReadlines:
	if i == '\r\n': #'\r\n' Significa que es una linea en blanco 
		dictionary = {} #Se inicializa el diccionario
		dictionary['label'] = ''
		dictionary['label_comment'] = ''
		dictionary['comment'] = ''
	if i != '\r\n' or i.count('*') == 0: #Si no es linea en blanco ni * entonces son datos a guardar
		if i.count('User:') > 0:
			splitFragment = i.split(' ') #Realizar split a los espacios en blanco para obtener los elementos
		    fragment = retireOfList(splitFragment, "") 
			dictionary['user'] = fragment[1]
			dictionary['date'] = fragment[3]
			dictionary['time'] = fragment[5]
		if i.count('Label:') > 0:
			splitFragment = i.split(':')
			if len(splitFragment) > 1 and splitFragment[1] != ' ':
				splitFragment = i.split('"')
				dictionary['label'] = splitFragment[1]
		if i.count('Label comment:') > 0:
			splitFragment = i.split(':')
			if len(splitFragment) > 1 and splitFragment[1] != ' ':
				dictionary['label_comment'] = splitFragment[1]
		if i.count('Comment:') > 0:
			splitFragment = i.split(':')
			if len(splitFragment) > 1 and splitFragment[1] != ' ':
				dictionary['comment'] = splitFragment[1]
		listVersiones.append(dictionary)
			

print retireOfList(splitDos, "")

#print historyComplete

//--------------------------------------------------------------------------------
Funcionando pero hace demasiados ciclos

#!/usr/bin/python

f = open('outHistoryComplete', 'r')
historyComplete = f.read() #Leer todo el historial
historyCompleteReadlines = f.readlines() #Leer todo el historial pero por lineas
f.close()

f = open('outHistoryComplete', 'r')
historyCompleteReadlines = f.readlines() #Leer todo el historial pero por lineas
f.close()

countVersions = historyComplete.count('User:') #Cantidad de versiones que tiene el proyecto

splitDos = historyCompleteReadlines[4].split(' ')

#Function para de una lista eliminar todos los valores que queremos que tenga, 
#por ejemplo si tenemos la lista ['1', '', '2', '3', '', ''] y queremos que se 
#eliminen todos los valores '' y que quede ['1', '2', '3'] entonces
#listParser: es la lista
#varReject: esel valor a desechar
def retireOfList(listParser, varReject):
	result = []
	for i in listParser:
		if i != varReject:
			result.append(i)
	return result

listVersiones = [] #Lista de Diccionarios, cada Diccionario sera los datos de una version
whileCount = 0
while whileCount < countVersions:
	for i in historyCompleteReadlines:
		if i != '\r\n' or i.count('*') == 0:
			dictionary = {}
			dictionary['label'] = ''
			dictionary['label_comment'] = ''
			dictionary['comment'] = ''
			if i.count('User:') > 0:
				splitFragment = i.split(' ')
				fragment = retireOfList(splitFragment, "")
				#print fragment
				dictionary['user'] = fragment[1]
				dictionary['date'] = fragment[3]
				dictionary['time'] = fragment[5]
				#print dictionary
				#print dictionary['date'] + ';' + dictionary['time']
			if i.count('Label:') > 0:
				splitFragment = i.split(':')
				if len(splitFragment) > 1 and splitFragment[1] != ' ':
					splitFragment = i.split('"')
					dictionary['label'] = splitFragment[1]
			if i.count('Label comment:') > 0:
				splitFragment = i.split(':')
				if len(splitFragment) > 1 and splitFragment[1] != ' ':
					dictionary['label_comment'] = splitFragment[1]
			if i.count('Comment:') > 0:
				splitFragment = i.split(':')
				if len(splitFragment) > 1 and splitFragment[1] != ' ':
					dictionary['comment'] = splitFragment[1]
			#print dictionary
	listVersiones.append(dictionary)
	whileCount += 1
			
print listVersiones
#print retireOfList(splitDos, "")

#print historyComplete

//---------------------------------------------------------------------
Funcionando

#!/usr/bin/python

f = open('outHistoryComplete', 'r')
historyComplete = f.read() #Leer todo el historial
f.close()

f = open('outHistoryComplete', 'r')
historyCompleteReadlines = f.readlines() #Leer todo el historial pero por lineas
f.close()

countVersions = historyComplete.count('User:') #Cantidad de versiones que tiene el proyecto

splitDos = historyCompleteReadlines[4].split(' ')

#Function para de una lista eliminar todos los valores que queremos que tenga, 
#por ejemplo si tenemos la lista ['1', '', '2', '3', '', ''] y queremos que se 
#eliminen todos los valores '' y que quede ['1', '2', '3'] entonces
#listParser: es la lista
#varReject: esel valor a desechar
def retireOfList(listParser, varReject):
	result = []
	for i in listParser:
		if i != varReject:
			result.append(i)
	return result

listVersions = [] #Lista de Diccionarios, cada Diccionario sera los datos de una version
for i in historyCompleteReadlines:
	dictionary = {} #Se inicializa el diccionario
	dictionary['label'] = ''
	dictionary['label_comment'] = ''
	dictionary['comment'] = ''
	if i != '\r\n' or i.count('*') == 0: #Si no es linea en blanco ni * entonces son datos a guardar
		if i.count('Label:') > 0:
			splitFragment = i.split(':')
			if len(splitFragment) > 1 and splitFragment[1] != ' ':
				splitFragment = i.split('"')
				dictionary['label'] = splitFragment[1]
		if i.count('Label comment:') > 0:
			splitFragment = i.split(':')
			if len(splitFragment) > 1 and splitFragment[1] != ' ':
				dictionary['label_comment'] = splitFragment[1]
		if i.count('Comment:') > 0:
			splitFragment = i.split(':')
			if len(splitFragment) > 1 and splitFragment[1] != ' ':
				dictionary['comment'] = splitFragment[1]
		if i.count('User:') > 0:
			splitFragment = i.split(' ') #Realizar split a los espacios en blanco para obtener los elementos
			fragment = retireOfList(splitFragment, "") 
			dictionary['user'] = fragment[1]
			dictionary['date'] = fragment[3]
			dictionary['time'] = fragment[5]
			listVersions.append(dictionary)
			
#print countVersions
#print len(listVersions)
print listVersions[3]
#print listVersions
#print retireOfList(splitDos, "")

#print historyComplete
